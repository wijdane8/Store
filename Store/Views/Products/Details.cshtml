@model Store.Models.Product

@{
    ViewData["Title"] = @Model.Name;
}

<div class="container py-5 product-details-section">
    <!-- Improved Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">الرئيسية</a></li>
            <li class="breadcrumb-item"><a href="/Products">المنتجات</a></li>
            @if (Model.Cat != null)
            {
                <li class="breadcrumb-item"><a href="/Products?category=@Model.Cat.Id">@Model.Cat.Name</a></li>
            }
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="row gx-lg-5 gy-5">
        <!-- Image Gallery Section -->
        <div class="col-lg-7">
            <div class="product-gallery">
                <div class="main-image">
                    @if (Model.ProductImages != null && Model.ProductImages.Any())
                    {
                        <img src="@Model.ProductImages.First().ImageUrl"
                             class="img-fluid rounded-3 shadow-lg"
                             alt="@Model.Name"
                             data-zoom="@Model.ProductImages.First().ImageUrl">
                    }
                    else
                    {
                        <img src="https://placehold.co/600x450/EEE/31343C/FFF?text=No+Image"
                             class="img-fluid rounded-3 shadow-lg"
                             alt="No image available">
                    }
                </div>

                @if (Model.ProductImages != null && Model.ProductImages.Count > 1)
                {
                    <div class="thumbnail-scroller mt-3">
                        @foreach (var image in Model.ProductImages)
                        {
                            <img src="@image.ImageUrl"
                                 class="thumbnail @(image.IsMain == true ? "active" : "")"
                                 alt="Thumbnail"
                                 data-main-src="@image.ImageUrl">
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Product Info Section -->
        <div class="col-lg-5">
            <div class="product-info-card shadow-sm rounded-3 p-4">
                <h1 class="product-title mb-3">@Model.Name</h1>

                <!-- Rating & Reviews -->
                <div class="rating-section mb-4">
                    <div class="stars">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="bi @(i <= Model.AverageRating ? "bi-star-fill" : "bi-star")"></i>
                        }
                    </div>
                    <a href="#reviews" class="review-count">
                        (@Model.ReviewCount تقييمات)
                    </a>
                </div>

                <!-- Price Section -->
                <div class="price-section mb-4">
                    @if (Model.OldPrice.HasValue)
                    {
                        <div class="d-flex align-items-center gap-3">
                            <span class="current-price">@Model.Price.ToString("N2") ر.س</span>
                            <span class="original-price">@Model.OldPrice.Value.ToString("N2") ر.س</span>
                            <span class="discount-badge">وفر @((100 - (Model.Price / Model.OldPrice.Value * 100)).ToString("N0"))%</span>
                        </div>
                    }
                    else
                    {
                        <span class="current-price">@Model.Price.ToString("N2") ر.س</span>
                    }
                </div>

                <!-- Stock Status -->
                <div class="stock-status alert @(Model.StockQuantity > 0 ? "alert-success" : "alert-danger") mb-4">
                    <i class="bi bi-box-seam me-2"></i>
                    @(Model.StockQuantity > 0 ? $"متوفر (آخر {Model.StockQuantity} قطع)" : "غير متوفر")
                </div>

                <!-- Add to Cart -->
                <div class="cart-actions mb-4">
                    <div class="quantity-selector d-flex align-items-center gap-2 mb-3">
                        <button class="btn btn-outline-secondary quantity-btn" data-action="decrement">−</button>
                        <input type="number"
                               class="form-control text-center"
                               value="1"
                               min="1"
                               max="@Model.StockQuantity">
                        <button class="btn btn-outline-secondary quantity-btn" data-action="increment">+</button>
                    </div>
                    <button class="btn btn-primary btn-lg w-100 add-to-cart" @(Model.StockQuantity == 0 ? "disabled" : "")>
                        <i class="bi bi-cart3 me-2"></i>أضف إلى السلة
                    </button>
                </div>

                <!-- Product Meta -->
                <div class="product-meta">
                    <div class="meta-item">
                        <span class="meta-label">السعر:</span>
                        <span class="meta-value">@Model.Price.ToString("N2") ر.س</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">العلامة التجارية:</span>
                        <span class="meta-value">@Model.Brand</span>
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">الضمان:</span>
                        <span class="meta-value">@Model.Warranty</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Details Tabs -->
    <div class="product-tabs mt-5">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#description">الوصف</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#specs">المواصفات</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#reviews">التقييمات (@Model.ReviewCount)</button>
            </li>
        </ul>

        <div class="tab-content mt-4">
            <!-- Description Tab -->
            <div class="tab-pane fade show active" id="description">
                <div class="product-description">
                    <h3 class="mb-4">تفاصيل المنتج</h3>
                    <div class="description-content">
                        @Html.Raw(Model.Description)
                    </div>
                </div>
            </div>

            <!-- Specifications Tab -->
            <div class="tab-pane fade" id="specs">
                <div class="specifications-table">
                    <div class="row">
                        @if (!string.IsNullOrEmpty(Model.Sku))
                        {
                            <div class="col-md-6 spec-item">
                                <span class="spec-label">رقم SKU:</span>
                                <span class="spec-value">@Model.Sku</span>
                            </div>
                        }
                        <!-- Repeat for other specs -->
                    </div>
                </div>
            </div>

            <!-- Reviews Tab -->
            <div class="tab-pane fade" id="reviews">
                <div class="reviews-section">
                    @if (Model.ProductReviews != null && Model.ProductReviews.Any())
                    {
                        foreach (var review in Model.ProductReviews)
                        {
                            <div class="review-card">
                                <div class="review-header">
                                    <div class="review-author">@review.User?.UserName</div>
                                    <div class="review-rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="bi @(i <= review.Rating ? "bi-star-fill" : "bi-star")"></i>
                                        }
                                    </div>
                                </div>
                                <div class="review-body">
                                    <h5 class="review-title">@review.Title</h5>
                                    <p class="review-text">@review.Comment</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-reviews">
                            <i class="bi bi-chat-square-text"></i>
                            <p>لا توجد تقييمات بعد</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom CSS */
    .product-gallery {
        position: relative;
    }

    .main-image {
        border: 1px solid #eee;
        border-radius: 12px;
        overflow: hidden;
    }

    .thumbnail-scroller {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding: 10px 0;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border: 2px solid transparent;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .thumbnail:hover, .thumbnail.active {
            border-color: #007bff;
        }

    .product-info-card {
        background: #fff;
        position: sticky;
        top: 20px;
    }

    .price-section {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
    }

    .current-price {
        font-size: 2rem;
        font-weight: 700;
        color: #2ecc71;
    }

    .original-price {
        text-decoration: line-through;
        color: #95a5a6;
    }

    .discount-badge {
        background: #e74c3c;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.9rem;
    }

    .quantity-selector {
        max-width: 200px;
    }

    .quantity-btn {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .review-card {
        background: #fff;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .product-info-card {
            position: static;
        }

        .quantity-selector {
            max-width: 100%;
        }
    }
</style>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Thumbnail interaction
            document.querySelectorAll('.thumbnail').forEach(thumb => {
                thumb.addEventListener('click', function() {
                    document.querySelector('.thumbnail.active').classList.remove('active');
                    this.classList.add('active');
                    document.querySelector('.main-image img').src = this.dataset.mainSrc;
                });
            });

            // Quantity selector
            document.querySelectorAll('.quantity-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const input = this.parentElement.querySelector('input');
                    const currentVal = parseInt(input.value);
                    const action = this.dataset.action;

                    if(action === 'increment') {
                        input.value = currentVal + 1;
                    } else {
                        if(currentVal > 1) input.value = currentVal - 1;
                    }
                });
            });

            // Image zoom
            const mainImage = document.querySelector('.main-image img');
            mainImage.addEventListener('mousemove', (e) => {
                // Implement zoom logic here
            });
        });
    </script>
}