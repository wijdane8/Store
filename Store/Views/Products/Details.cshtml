@model Store.Models.Product
@using System.Globalization
@using Newtonsoft.Json
@using Microsoft.EntityFrameworkCore

@{
    ViewData["Title"] = "Details";
    var isAuthenticated = User.Identity?.IsAuthenticated ?? false;
    var discountPercentage = Model.OldPrice > 0 ?
        (int)((1 - (Model.Price / Model.OldPrice)) * 100) : 0;

    // Inject your database context
    var dbContext = Context.RequestServices.GetRequiredService<MyStoreContext>();

    // Fetch related products from the database
    var relatedProducts = await dbContext.Products
        .Where(p => p.CatId == Model.CatId && p.Id != Model.Id) // Same category, not the current product
        .OrderBy(p => p.Material) // Order by material (similar to different will depend on how 'Material' is defined)
        .Take(6) // Limit the number of related products displayed
        .ToListAsync();

    // If you need a more complex ordering based on "similarity" of material,
    // you might need to define a custom logic or have a specific column
    // indicating material similarity. For a simple similar-to-different,
    // alphabetical or a predefined order of materials in your database might work.
}

<meta name="description" content="@Model.ShortDescription">
<meta name="keywords" content="Product, @Model.Name, Buy Online, Store">
<meta property="og:title" content="@Model.Name">
<meta property="og:description" content="@Model.ShortDescription">
<meta property="og:image" content="@(Model.Photo ?? "https://placehold.co/600x500/EEE/31343C?text=No+Image+Available")">
<meta property="og:url" content="@Url.Action("Details", "Products", new { id = Model.Id }, ViewContext.HttpContext.Request.Scheme)">

<script type="application/ld+json">
    {
        "@@context": "https://schema.org/",
        "@@type": "Product",
        "name": "@Model.Name",
        "image": ["@(Model.Photo ?? "https://placehold.co/600x500/EEE/31343C?text=No+Image+Available")"],
        "description": "@Model.ShortDescription",
        "brand": "Store",
        "offers": {
            "@@type": "Offer",
            "price": "@string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:F2}", Model.Price)",
            "priceCurrency": "SAR",
            "availability": "@(Model.Stock > 0 ? "https://schema.org/InStock" : "https://schema.org/OutOfStock")"
        }
    }
</script>

<section class="product-details-section">
    <div class="container" data-aos="fade-up">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">الرئيسية</a></li>
                <li class="breadcrumb-item"><a asp-action="Index" asp-route-category="@Model.Cat">المنتجات</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
            </ol>
        </nav>

        <div class="product-details-card">
            <div class="row g-4">
                <div class="col-lg-5">
                    <div class="product-gallery">
                        <div class="main-image mb-3">
                            <img src="@(Model.Photo ?? "https://placehold.co/600x500/EEE/31343C?text=صورة+غير+متوفرة")"
                                 alt="@Model.Name"
                                 class="img-fluid rounded-3 zoomable"
                                 id="mainProductImage" />
                        </div>

                        <div class="thumbnail-gallery">
                            <div class="row g-2">
                                @foreach (var image in Model.ProductImages)
                                {
                                    <div class="col-3">
                                        <img src="@image.ImageUrl"
                                             alt="@Model.Name"
                                             class="img-thumbnail thumbnail"
                                             data-fullsize="@image.ImageUrl" />
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-7">
                    <div class="product-info">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h1 class="product-title">@Model.Name</h1>
                            <div class="product-share">
                                <button class="btn btn-sm btn-outline-secondary share-btn"
                                        data-bs-toggle="tooltip"
                                        title="مشاركة"
                                        aria-label="مشاركة المنتج">
                                    <i class="bi bi-share"></i>
                                </button>
                            </div>
                        </div>

                        <div class="product-rating mb-3">
                            <div class="stars" aria-label="التقييم 4.5 من 5">
                                <i class="bi bi-star-fill"></i>
                                <i class="bi bi-star-fill"></i>
                                <i class="bi bi-star-fill"></i>
                                <i class="bi bi-star-fill"></i>
                                <i class="bi bi-star-half"></i>
                            </div>
                            <span class="rating-text">(12 تقييم)</span>
                            <a href="#reviews" class="text-muted ms-2">أضف تقييمك</a>
                        </div>

                        <div class="price-availability mb-4">
                            <div class="price">
                                <span class="current-price">@string.Format(CultureInfo.InvariantCulture, "{0:N2}", Model.Price) ر.س</span>
                                @if (Model.OldPrice > 0)
                                {
                                    <span class="old-price">@Model.OldPrice.ToString("N2", CultureInfo.InvariantCulture) ر.س</span>
                                    <span class="discount-badge">@discountPercentage% خصم</span>
                                }
                            </div>
                            <div class="availability">
                                @if (Model.Stock > 0)
                                {
                                    <span class="text-success">
                                        <i class="bi bi-check-circle-fill"></i>
                                        @(Model.Stock > 10 ? "متوفر في المخزن" : $"أقل من {Model.Stock} وحدة متبقية")
                                    </span>
                                }
                                else
                                {
                                    <span class="text-danger">
                                        <i class="bi bi-x-circle-fill"></i> غير متوفر حالياً
                                    </span>
                                }
                            </div>
                        </div>

                        <div class="short-description mb-4">
                            <p>@Model.ShortDescription</p>
                        </div>

                        <div>
                            @if (Model.Stock > 0)
                            {
                                <button class="btn btn-primary btn-lg add-to-cart-btn"
                                @if (!isAuthenticated)
                                {
                                    @:onclick="location.href='@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path + Context.Request.QueryString })'"
                                }
                                else
                                {
                                    @:onclick="addToCart(@Model.Id)"
                                }>
                                    <i class="bi bi-cart-plus me-2"></i> أضف إلى السلة
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-outline-secondary btn-lg disabled" aria-disabled="true">
                                    <i class="bi bi-cart-x me-2"></i> غير متوفر
                                </button>
                            }

                            <button class="btn btn-outline-secondary btn-lg ms-2 add-to-favorites-btn"
                            @if (!isAuthenticated)
                            {
                                @:onclick="location.href='@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path + Context.Request.QueryString })'"
                            }
                            else
                            {
                                @:onclick="addToFavorites(@Model.Id)"
                            }>
                                <i class="bi bi-heart @*bi-heart-fill if already in favorites*@ me-2"></i> إضافة للمفضلة
                            </button>
                        </div>

                        <div id="reviews" class="reviews-section mt-5">
                            <h2>التقييمات</h2>
                            @if (Model.ProductReviews != null && Model.ProductReviews.Any())
                            {
                                @foreach (var review in Model.ProductReviews)
                                {
                                    <div class="review mb-3 p-3 border rounded">
                                        <strong>@review.User?.UserName</strong>
                                        <p class="mb-0">@review.Comment</p>
                                    </div>
                                }
                                <a href="#" class="btn btn-outline-secondary mt-3">عرض جميع التقييمات</a>
                            }
                            else
                            {
                                <p>لا يوجد تقييمات لهذا المنتج حتى الآن.</p>
                            }

                            @if (isAuthenticated && /* Check if the user has purchased this product */ true /* Replace with your logic */)
                            {
                                <div class="mt-4">
                                    <h3>أضف تقييمك</h3>
                                    <form action="@Url.Action("AddReview", "Products")" method="post">
                                        <input type="hidden" name="ProductId" value="@Model.Id" />
                                        <div class="mb-3">
                                            <label for="Comment" class="form-label">تقييمك:</label>
                                            <textarea class="form-control" id="Comment" name="Comment" rows="3" required></textarea>
                                        </div>
                                        <button type="submit" class="btn btn-primary">إرسال التقييم</button>
                                    </form>
                                </div>
                            }
                            else if (isAuthenticated)
                            {
                                <p class="mt-3">يمكنك إضافة تقييم بعد شرائك لهذا المنتج.</p>
                            }
                            else
                            {
                                <p class="mt-3"><a asp-action="Login" asp-controller="Account" asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">سجل الدخول</a> لإضافة تقييم.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="related-products mt-5">
            <h2>المنتجات المشابهة</h2>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var relatedProduct in relatedProducts)
                {
                    <div class="col">
                        <div class="card h-100">
                            <img src="@(relatedProduct.Photo ?? "https://placehold.co/300x300/EEE/31343C?text=No+Image")"
                                 class="card-img-top"
                                 alt="@relatedProduct.Name"
                                 loading="lazy">
                            <div class="card-body">
                                <h5 class="card-title">@relatedProduct.Name</h5>
                                <p class="card-text">@relatedProduct.ShortDescription</p>
                                <p class="card-text"><small class="text-muted">@relatedProduct.Price ر.س</small></p>
                                <a asp-action="Details" asp-controller="Products" asp-route-id="@relatedProduct.Id" class="btn btn-outline-primary">عرض المنتج</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
            @if (relatedProducts.Any())
            {
                <div class="mt-3 text-center">
                    <a href="#" class="btn btn-outline-secondary">عرض المزيد من المنتجات المشابهة</a>
                </div>
            }
            else
            {
                <p class="mt-3 text-muted text-center">لا توجد منتجات مشابهة حالياً.</p>
            }
        </div>
    </div>
</section>

<div class="modal fade" id="imageZoomModal" tabindex="-1" aria-labelledby="imageZoomModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img src="" class="img-fluid" id="zoomImage" alt="Product Image">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Lazy loading for images
        document.querySelectorAll('img').forEach(img => img.setAttribute('loading', 'lazy'));

        // Zoom functionality for main image
        document.querySelector('.zoomable').addEventListener('click', function () {
            const modal = new bootstrap.Modal(document.getElementById('imageZoomModal'), {});
            document.getElementById('zoomImage').src = this.src;
            modal.show();
        });

        function addToCart(productId) {
            // Implement your AJAX call to add the product to the cart
            console.log('Adding product ' + productId + ' to cart');
            fetch('/Cart/AddToCart/' + productId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    console.log('Product added to cart successfully');
                    // Optionally update UI
                } else {
                    console.error('Failed to add product to cart');
                    // Optionally display error message
                }
            })
            .catch(error => {
                console.error('Error adding product to cart:', error);
            });
        }

        function addToFavorites(productId) {
            // Implement your AJAX call to add the product to favorites
            console.log('Adding product ' + productId + ' to favorites');
            fetch('/Favorites/AddToFavorites/' + productId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    console.log('Product added to favorites successfully');
                    // Optionally update UI
                } else {
                    console.error('Failed to add product to favorites');
                    // Optionally display error message
                }
            })
            .catch(error => {
                console.error('Error adding product to favorites:', error);
            });
        }
    </script>
}