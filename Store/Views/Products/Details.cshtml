@model Store.Models.Product

@{
    ViewData["Title"] = @Model.Name; // عنوان الصفحة هو اسم المنتج
}

<div class="container py-5">
    <div class="row gx-5">
        <div class="col-lg-6 mb-4 mb-lg-0">
            <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @if (Model.ProductImages != null && Model.ProductImages.Any())
                    {
                        int i = 0;
                        foreach (var image in Model.ProductImages.OrderByDescending(img => img.IsMain))
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@image.ImageUrl" class="d-block w-100 rounded" alt="@Model.Name - Image @(i+1)">
                            </div>
                            i++;
                        }
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <img src="@(Model.Photo ?? "https://placehold.co/600x450/EEE/31343C/FFF?text=No+Image")"
                                 class="d-block w-100 rounded" alt="No image available">
                        </div>
                    }
                </div>
                @if (Model.ProductImages != null && Model.ProductImages.Count > 1)
                {
                    <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">السابق</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">التالي</span>
                    </button>
                }
            </div>
        </div>

        <div class="col-lg-6">
            <h1 class="display-5 fw-bold mb-4">@Model.Name</h1>
            <p class="lead mb-4">@Model.Description</p>

            <div class="d-flex align-items-center mb-4">
                @if (Model.OldPrice.HasValue && Model.OldPrice.Value > Model.Price)
                {
                    <span class="text-decoration-line-through text-muted me-2" style="font-size: 1.2rem;">@Model.OldPrice.Value.ToString("N2") ر.س</span>
                    <span class="display-6 fw-bold text-success me-3">@Model.Price.ToString("N2") ر.س</span>
                    <span class="badge bg-danger rounded-pill px-3 py-2">خصم!</span>
                }
                else
                {
                    <span class="display-6 fw-bold text-primary me-3">@Model.Price.ToString("N2") ر.س</span>
                }
            </div>

            <ul class="list-unstyled mb-4">
                <li><strong>الفئة:</strong> @Model.Cat?.Name</li>
                <li><strong>العلامة التجارية:</strong> @Model.Brand</li>
                <li>
                    <strong>المخزون:</strong>
                    @if (Model.StockQuantity.HasValue && Model.StockQuantity.Value > 0)
                    {
                        <span class="text-success">متوفر (@Model.StockQuantity.Value)</span>
                    }
                    else
                    {
                        <span class="text-danger">غير متوفر</span>
                    }
                </li>
                <li>
                    <strong>التقييم:</strong>
                    @if (Model.ReviewCount > 0)
                    {
                        <span>@Model.AverageRating.ToString("N1") نجوم (@Model.ReviewCount تقييم)</span>
                    }
                    else
                    {
                        <span>لا توجد تقييمات بعد.</span>
                    }
                </li>
            </ul>

            <div class="d-flex align-items-center mb-4">
                <input type="number" id="productQuantity" class="form-control me-3" value="1" min="1" max="@(Model.StockQuantity ?? 1)" style="width: 80px;">
                <button id="addToCartBtn" class="btn btn-success btn-lg" data-product-id="@Model.Id" @(Model.StockQuantity.HasValue && Model.StockQuantity.Value == 0 ? "disabled" : "")>
                    <i class="bi bi-cart-plus me-2"></i> إضافة للسلة
                </button>
            </div>

            <hr class="my-4">

            <h3 class="mb-3">المواصفات</h3>
            <table class="table table-striped table-hover">
                <tbody>
                    @if (!string.IsNullOrEmpty(Model.Sku))
                    {
                        <tr><td>SKU</td><td>@Model.Sku</td></tr>
                    }
                    @if (Model.Weight.HasValue)
                    {
                        <tr><td>الوزن</td><td>@Model.Weight.Value.ToString("N2") كجم</td></tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.Dimensions))
                    {
                        <tr><td>الأبعاد</td><td>@Model.Dimensions</td></tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.Color))
                    {
                        <tr><td>اللون</td><td>@Model.Color</td></tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.Material))
                    {
                        <tr><td>المادة</td><td>@Model.Material</td></tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.Warranty))
                    {
                        <tr><td>الضمان</td><td>@Model.Warranty</td></tr>
                    }
                </tbody>
            </table>

            <hr class="my-4">

            <h3 class="mb-3">تقييمات العملاء (@Model.ReviewCount)</h3>
            <div class="reviews-section">
                @if (Model.ProductReviews != null && Model.ProductReviews.Any())
                {
                    @foreach (var review in Model.ProductReviews.OrderByDescending(r => r.ReviewDate))
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title mb-1">
                                    @review.Title
                                    @* *** التعديل هنا: إزالة .HasValue و .Value *** *@
                                    <small class="text-muted float-end">@review.ReviewDate.ToString("dd MMM YYYY")</small>
                                </h5>
                                <div class="rating mb-2">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="bi bi-star-fill @(i <= review.Rating ? "text-warning" : "text-light")"></i>
                                    }
                                </div>
                                <p class="card-text">@review.Comment</p>
                                <small class="text-muted">بواسطة: @review.UserId (المستخدم)</small>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">لا توجد تقييمات لهذا المنتج بعد.</p>
                }

                @* نموذج إضافة تقييم جديد *@
                @if (User.Identity?.IsAuthenticated ?? false)
                {
                    <h4 class="mt-4 mb-3">أضف تقييمك</h4>
                    <form id="reviewForm">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <div class="mb-3">
                            <label for="reviewRating" class="form-label">التقييم:</label>
                            <select class="form-select" id="reviewRating" name="rating" required>
                                <option value="">اختر تقييمًا</option>
                                <option value="5">5 نجوم - ممتاز</option>
                                <option value="4">4 نجوم - جيد جدًا</option>
                                <option value="3">3 نجوم - جيد</option>
                                <option value="2">2 نجوم - مقبول</option>
                                <option value="1">1 نجمة - سيء</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="reviewTitle" class="form-label">العنوان:</label>
                            <input type="text" class="form-control" id="reviewTitle" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="reviewComment" class="form-label">التعليق:</label>
                            <textarea class="form-control" id="reviewComment" name="comment" rows="3" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">إرسال التقييم</button>
                    </form>
                }
                else
                {
                    <p class="text-center mt-4 text-muted">
                        <a asp-area="Identity" asp-page="/Account/Login">سجل الدخول</a> لإضافة تقييم.
                    </p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            if (typeof AOS !== 'undefined') {
                AOS.init({
                    duration: 800,
                    easing: "ease-in-out",
                    once: true,
                });
            } else {
                console.warn('AOS library not found. Skipping AOS initialization.');
            }

            // JavaScript for Add to Cart
            document.getElementById('addToCartBtn').addEventListener('click', async function () {
                const productId = this.dataset.productId;
                const quantityInput = document.getElementById('productQuantity');
                const quantity = parseInt(quantityInput?.value || '1'); // Fallback to 1 if not found

                try {
                    const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (!antiForgeryToken) {
                        console.error("CSRF token not found. Add @Html.AntiForgeryToken() to your form or layout.");
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ في الأمان!',
                            text: 'رمز التحقق مفقود. يرجى إعادة تحميل الصفحة.',
                            showConfirmButton: true
                        });
                        return;
                    }

                    const response = await fetch('/Products/AddToCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': antiForgeryToken.value
                        },
                        body: JSON.stringify({ productId: parseInt(productId), quantity: quantity })
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'تمت الإضافة!',
                            text: result.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload(); // إعادة تحميل الصفحة لتحديث المخزون
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ!',
                            text: result.message,
                            showConfirmButton: true
                        });
                    }
                } catch (error) {
                    console.error('Error adding to cart:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'خطأ في الاتصال!',
                        text: 'حدث خطأ أثناء إضافة المنتج. يرجى المحاولة لاحقًا.',
                        showConfirmButton: true
                    });
                }
            });

            // JavaScript for Submit Review
            document.getElementById('reviewForm')?.addEventListener('submit', async function (event) {
                event.preventDefault();

                const productId = this.querySelector('input[name="productId"]').value;
                const rating = parseInt(this.querySelector('select[name="rating"]').value);
                const title = this.querySelector('input[name="title"]').value;
                const comment = this.querySelector('textarea[name="comment"]').value;

                try {
                    const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (!antiForgeryToken) {
                        console.error("CSRF token not found.");
                        Swal.fire({ icon: 'error', title: 'خطأ في الأمان!', text: 'رمز التحقق مفقود. يرجى إعادة تحميل الصفحة.' });
                        return;
                    }

                    const response = await fetch('/Products/SubmitReview', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
                            'RequestVerificationToken': antiForgeryToken.value
                        },
                        body: new URLSearchParams({
                            productId: productId,
                            rating: rating,
                            title: title,
                            comment: comment
                        }).toString()
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'شكراً لتقييمك!',
                            text: result.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload(); // إعادة تحميل الصفحة لرؤية التقييم الجديد
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ!',
                            text: result.message,
                            showConfirmButton: true
                        });
                    }
                } catch (error) {
                    console.error('Error submitting review:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'خطأ في الاتصال!',
                        text: 'حدث خطأ أثناء إرسال التقييم. يرجى المحاولة لاحقًا.',
                        showConfirmButton: true
                    });
                }
            });
        });
    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
}

<style>
    /* يمكنك إضافة تنسيقات CSS لصفحة التفاصيل هنا أو في ملف site.css */
    .product-details-container {
        padding: 40px 0;
    }

    .carousel-item img {
        height: 450px; /* ارتفاع ثابت للصور */
        object-fit: contain; /* للحفاظ على نسبة العرض */
        background-color: #f8f9fa; /* خلفية خفيفة */
    }

    .list-unstyled li {
        margin-bottom: 8px;
        font-size: 1rem;
        color: #555;
    }

    .table td {
        font-size: 0.95rem;
    }

    .rating .bi-star-fill {
        font-size: 1.2rem;
        color: #ddd; /* لون النجمة غير الملونة */
    }

        .rating .bi-star-fill.text-warning {
            color: #ffc107 !important; /* لون النجمة الملونة */
        }
</style>